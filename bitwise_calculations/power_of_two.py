#  (x - 1)base2 is the same as xbase2 up to rightmost one, then all values flipped
#  eg: x = 4, x - 1 = 3
#      x     = 100
#      x - 1 = 011
#  eg: x = 100, x - 1 = 99
#      x     = 1100100
#      x - 1 = 1100011


#  x & ( x - 1 ) == 0 if is a power of two.
#    x     = 6 = 110 = 1(2**2) + 1(2**1) + 0(2**0) = 4 + 2 + 0 = 6
#    x - 1 = 5 = 101 = 0(2**2) + 1(2**1) + 1(2**0) = 4 + 0 + 1 = 5
#    ----
#    x & x -1 = 110 & 101 = 100 = 4, so 6 not power of 2.
#
#    ############################################################
#
#    x     = 100 = 1100100 = 1(2**6) + 1(2**5) + 0(2**4) + 0(2**3) + 1(2**2) + 0(2**1) + 0(2**0)
#                          =    64   +    32   +    0    +    0    +    4    +    0    +    0   = 100
#    x - 1 = 99  = 1100011 = 1(2**6) + 1(2**5) + 0(2**4) + 0(2**3) + 0(2**2) + 1(2**1) + 1(2**0)
#                          =    64   +    32   +    0    +    0    +    0    +    2    +    1   = 99
#    ----
#    x & x - 1 = 1100100 & 1100011 = 1111000
#
#    ############################################################
#
#    x     = 64 = 1000000
#    x - 1 = 63 = 0111111
#    ----
#
#
#


def isPowerOfTwo(n: int) -> bool:
    if n & (n - 1) == 0:
        return True
    return False


print(isPowerOfTwo(64))
print(isPowerOfTwo(100))
print(isPowerOfTwo(4))
